name: "Continuous Integration"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  ci:
    name: "🚀 CI"
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.29.0
          channel: stable
          cache: true

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          flutter pub global activate coverage
          dart pub global activate dreport

      - name: Install DCM
        uses: CQLabs/setup-dcm@v1.1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐶 Setup Reviewdog
        uses: reviewdog/action-setup@e04ffabe3898a0af8d0fb1af00c188831c4b5893 # v1.3.2
        with:
          reviewdog_version: latest # Optional. [latest,nightly,v.X.Y.Z]

      - name: 🦄 Bootstrap
        run: bash ./scripts/bootstrap.bash

      - name: ✨ Check Formatting
        run: |
          find lib test -name "*.dart" ! -name "*.*.dart" -print0 \
            | xargs -0 dart format --set-exit-if-changed --line-length 100 -o none
        continue-on-error: true

      - name: 🕵️ Analyze
        run: |
          flutter analyze . | tee analysis.log
          dreport analyze convert -i analysis.log -o reports/analysis.json -f rdjson
        continue-on-error: true

      - name: 🕵️ Reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # If it is a pull request run github-pr-check, otherwise run github-check
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            reviewdog -f=rdjson -name=flutter-analyze -reporter=github-pr-check -level=error < reports/analysis.json
          else
            reviewdog -f=rdjson -name=flutter-analyze -reporter=github-check -level=error < reports/analysis.json
          fi
        
        # TODO: Remove this step if you don't use DCM
      - name: 🕵️ Analyze with DCM
        run: dcm analyze .
        continue-on-error: true

      - name: 🧪 Run Tests
        run: bash ./scripts/test.bash
        continue-on-error: true

      - name: 📥 Upload test report
        uses: actions/upload-artifact@v4
        if: (success() || failure()) && ${{ github.actor != 'dependabot[bot]' }}
        with:
          name: test-results
          path: reports/tests.json

  # ———————————————————————————————————————————————————————
  #   TEST REPORT JOB
  # ———————————————————————————————————————————————————————
  report_tests:
    name: "🚛 Test report"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    # continue-on-error allows this job to run even if 'ci' fails
    continue-on-error: true
    needs: [ci]
    steps:
      - name: Test Report
        uses: dorny/test-reporter@v1
        with:
          artifact: test-results
          name: Test Report
          path: "**/tests.json"
          reporter: flutter-json
          fail-on-error: false
